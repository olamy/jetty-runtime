<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.google.cloud.runtimes.perf</groupId>
    <artifactId>perf-server</artifactId>
    <version>0.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>webapp</artifactId>
  <packaging>war</packaging>

  <name>Jetty Runtime :: Perf :: Server :: Webapp</name>
  <description>Jetty Load Test project webapp</description>

  <dependencies>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <scope>provided</scope>
    </dependency>

  </dependencies>


  <build>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin-version}</version>
          <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>${jetty-maven-plugin-version}</version>
        </plugin>
        <plugin>
          <groupId>com.google.appengine</groupId>
          <artifactId>gcloud-maven-plugin</artifactId>
          <configuration>
            <gcloud_app_prefix>beta</gcloud_app_prefix>
            <gcloud_directory>${gcloud.sdk.path}</gcloud_directory>
            <gcloud_project>jetty9-work</gcloud_project>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-war</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/docker</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                </resource>
                <resource>
                  <directory>src/main/docker</directory>
                  <includes>
                    <include>Dockerfile</include>
                  </includes>
                  <filtering>true</filtering>
                  <targetPath>../docker</targetPath>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-docker-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/appengine-staging</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                </resource>
                <resource>
                  <directory>src/main/appengine</directory>
                  <includes>
                    <include>app.yaml</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      -->

      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
            <configuration>
              <imageName>jetty-runtime-perf/${project.artifactId}</imageName>
              <baseImage>${jetty.test.image}</baseImage>
              <dockerDirectory>${project.build.directory}/docker</dockerDirectory>
              <imageTags>
                <imageTag>${project.version}</imageTag>
              </imageTags>
              <resources>
                <resource>
                  <targetPath>/</targetPath>
                  <directory>${project.build.directory}</directory>
                  <include>${project.build.finalName}.war</include>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <!--
          <execution>
            <id>base-webapp</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>webapp</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <includes>**</includes>
                  <outputDirectory>${project.build.directory}/docker</outputDirectory>
                  <destFileName>webapp.war</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>base-webapp-appengine-staging</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>webapp</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <includes>**</includes>
                  <outputDirectory>${project.build.directory}/appengine-staging</outputDirectory>
                  <destFileName>webapp.war</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          -->
          <execution>
            <id>jetty-distribution</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>jetty-home</artifactId>
                  <version>${jetty9.version}</version>
                  <type>tar.gz</type>
                  <overWrite>true</overWrite>
                  <includes>**</includes>
                  <outputDirectory>${project.build.directory}/docker</outputDirectory>
                  <destFileName>jetty-home.tar.gz</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>jetty-distribution-appengine-staging</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>jetty-home</artifactId>
                  <version>${jetty9.version}</version>
                  <type>tar.gz</type>
                  <overWrite>true</overWrite>
                  <includes>**</includes>
                  <outputDirectory>${project.build.directory}/appengine-staging</outputDirectory>
                  <destFileName>jetty-home.tar.gz</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>

        </executions>
      </plugin>
    </plugins>

  </build>


  <profiles>
    <profile>
      <id>gcloud-deploy</id>
      <build>
        <plugins>
          <!--
          <plugin>
            <groupId>com.google.appengine</groupId>
            <artifactId>gcloud-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>gcloud-deploy</id>
                <phase>install</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
                <configuration>
                  <staging_directory>${project.build.directory}/appengine-staging</staging_directory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          -->
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>appengine-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>gcloud-deploy</id>
                <phase>install</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
                <configuration>
                  <deploy.project>${app.deploy.project}</deploy.project>
                  <deploy.version>${maven.build.timestamp}</deploy.version>
                  <deploy.promote>false</deploy.promote>
                  <dockerDirectory>${project.build.directory}/docker
                  </dockerDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
